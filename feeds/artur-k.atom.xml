<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>IT Blog - Artur K.</title><link href="https://kutsevol.github.io/" rel="alternate"></link><link href="https://kutsevol.github.io/feeds/artur-k.atom.xml" rel="self"></link><id>https://kutsevol.github.io/</id><updated>2017-02-09T00:00:00+02:00</updated><entry><title>Alias</title><link href="https://kutsevol.github.io/2017/02/09/alias" rel="alternate"></link><published>2017-02-09T00:00:00+02:00</published><updated>2017-02-09T00:00:00+02:00</updated><author><name>Artur K.</name></author><id>tag:kutsevol.github.io,2017-02-09:/2017/02/09/alias</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;&lt;strong&gt;Содержание&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id6"&gt;&lt;strong&gt;Введение&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#alias" id="id7"&gt;&lt;strong&gt;Как создать alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id8"&gt;&lt;strong&gt;Постоянные alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id9"&gt;&lt;strong&gt;Просмотр списка alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id10"&gt;&lt;strong&gt;Удаление alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;&lt;strong&gt;Введение&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Команда &lt;strong&gt;alias&lt;/strong&gt; - это очень удобный инструмент для тех, кто часто работает в командной строке.
При правильных установках она поможет вам быстрее вводить команды, а также
исправлять опечатки. &lt;strong&gt;alias&lt;/strong&gt; - это встроенная команда оболочки, поэтому инсталлировать ее не требуется …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;&lt;strong&gt;Содержание&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id6"&gt;&lt;strong&gt;Введение&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#alias" id="id7"&gt;&lt;strong&gt;Как создать alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id8"&gt;&lt;strong&gt;Постоянные alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id9"&gt;&lt;strong&gt;Просмотр списка alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id10"&gt;&lt;strong&gt;Удаление alias&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;&lt;strong&gt;Введение&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Команда &lt;strong&gt;alias&lt;/strong&gt; - это очень удобный инструмент для тех, кто часто работает в командной строке.
При правильных установках она поможет вам быстрее вводить команды, а также
исправлять опечатки. &lt;strong&gt;alias&lt;/strong&gt; - это встроенная команда оболочки, поэтому инсталлировать ее не требуется.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;alias&lt;/strong&gt; используется для создания альтернативных версий обычных команд, присваивая
им новые названия, а также чтобы избежать необходимости запоминать длинные и
сложные команды. Кроме того, вы можете задать опции по умолчанию, которые
используются каждый раз при запуске команды alias.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alias"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;&lt;strong&gt;Как создать alias&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Каждый день, как правило, используются одни и те же команды такие как &lt;em&gt;sudo aptitude update&lt;/em&gt;,
&lt;em&gt;sudo aptitude upgrade&lt;/em&gt;, &lt;em&gt;sudo aptitude install&lt;/em&gt; и т.д. С помощью &lt;em&gt;alias&lt;/em&gt; их можно заменить, например,
на - &lt;em&gt;update&lt;/em&gt;, &lt;em&gt;upgrade&lt;/em&gt; и &lt;em&gt;install&lt;/em&gt; соответственно. Как это сделать?&lt;/p&gt;
&lt;p&gt;Общая конструкция создания &lt;strong&gt;alias&lt;/strong&gt; следующая:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
alias short_name=&amp;quot;command&amp;quot;
&lt;/pre&gt;
&lt;p&gt;Где &lt;em&gt;short_name&lt;/em&gt; - название (псевдоним) которое будет использоваться после создания
&lt;strong&gt;alias&lt;/strong&gt;, a &lt;em&gt;command&lt;/em&gt; - команда, которую необходимо выполнить, например:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
alias install=&amp;quot;sudo aptitude install&amp;quot;
&lt;/pre&gt;
&lt;p&gt;Если выполнить эту команду в коммандной строке, использовать данный &lt;strong&gt;alias&lt;/strong&gt;
можно будет сразу, но! &amp;quot;время жизни&amp;quot; &lt;strong&gt;alias&lt;/strong&gt; ограничивается временем жизни
сессии в которой был выполнен этот &lt;strong&gt;alias&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;&lt;strong&gt;Постоянные alias&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Для того чтобы создаваемые &lt;strong&gt;alias&lt;/strong&gt; были доступны всегда необходимо их
включить в свой локальный файл &lt;em&gt;~/.bashrc&lt;/em&gt;. Здесь мы предпологаем, что в качестве
коммандной оболочки используется &lt;em&gt;bash&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Есть несколько способов, как включить &lt;strong&gt;alias&lt;/strong&gt; в &lt;em&gt;.bashrc&lt;/em&gt;. Каждый способ
подразумевает сделать 2 шага: добавить &lt;strong&gt;alias&lt;/strong&gt; в файл &lt;em&gt;.bashrc&lt;/em&gt; и
&lt;cite&gt;перезагрузить файл *.bashrc*&lt;/cite&gt;.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;С помощью команды echo:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code literal-block"&gt;
echo 'alias install=&amp;quot;sudo aptitude install&amp;quot;' &amp;gt;&amp;gt; ~/.bashrc

. ~/.bashrc
&lt;/pre&gt;
&lt;p&gt;. ~/.bashrc - &lt;cite&gt;перезагрузка&lt;/cite&gt; файла без выхода из системы, используется, чтобы
внесенные изменения можно было использовать в текущей сессии.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Добавление &lt;strong&gt;alias&lt;/strong&gt; в ручную в &lt;em&gt;~/.bashrc&lt;/em&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code literal-block"&gt;
sudo nano ~/.bashrc
&lt;/pre&gt;
&lt;p&gt;В конце файла или в любом другом месте, добавить alias:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
alias install=&amp;quot;sudo aptitude install&amp;quot;
&lt;/pre&gt;
&lt;p&gt;Сохранить изменения и выйти из файла. Перезагрузить файл:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
. ~/.bashrc
&lt;/pre&gt;
&lt;p&gt;3. Добавление &lt;strong&gt;alias&lt;/strong&gt; в отдельный файл. Со временем к-во &lt;strong&gt;alias&lt;/strong&gt; может
быстро разростаться и искать их в файле &lt;em&gt;~/.bashrc&lt;/em&gt; станет довольно трудно,
поэтому все &lt;strong&gt;alias&lt;/strong&gt; можно вынести в отдельный файл, например, &lt;em&gt;~/.bash_aliases&lt;/em&gt;
(по умолчанию не существует).&lt;/p&gt;
&lt;p&gt;Создаем файл:&lt;/p&gt;
&lt;p&gt;..code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
touch ~/.bash_aliases
&lt;/pre&gt;
&lt;p&gt;Открываем на редактирование:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
sudo nano ~/.bash_aliases
&lt;/pre&gt;
&lt;p&gt;Добавить все &lt;strong&gt;alias&lt;/strong&gt; в файл &lt;em&gt;~/.bash_aliases&lt;/em&gt;, сохранить и выйти из файла.&lt;/p&gt;
&lt;p&gt;В файле ~/.bashrc дописываем (раскомментируем) следующий код, чтобы все &lt;strong&gt;alias&lt;/strong&gt;
были доступны системе:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi
&lt;/pre&gt;
&lt;p&gt;&lt;cite&gt;Перезагружаем&lt;/cite&gt; файл:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
. ~/.bashrc
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;&lt;strong&gt;Просмотр списка alias&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Чтобы посмотреть список всех доступных &lt;strong&gt;alias&lt;/strong&gt;, просто выполните команду
&lt;em&gt;alias&lt;/em&gt; без аргументов (в некоторых системах используется опция -p)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
$ alias
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;&lt;strong&gt;Удаление alias&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Если &lt;strong&gt;alias&lt;/strong&gt; больше не нужен, можно удалить его из системы, используя команды
&lt;em&gt;unalias&lt;/em&gt;. В качестве аргумента вставьте имя алиаса, который хотите удалить.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
$ alias | grep ls
alias ls='ls -l'
$ unalias ls
$ alias | grep ls
$
&lt;/pre&gt;
&lt;p&gt;Если вы определили свой &lt;strong&gt;alias&lt;/strong&gt; в файле &lt;em&gt;~/.bashrc&lt;/em&gt;, также необходимо удалить
определение &lt;strong&gt;alias&lt;/strong&gt;, иначе он снова будет определен после старта сеанса
командной оболочки или перезагрузки компьютера.&lt;/p&gt;
&lt;/div&gt;
</content><category term="linux"></category></entry><entry><title>Virtualenv in Python</title><link href="https://kutsevol.github.io/2017/01/23/virtualenv" rel="alternate"></link><published>2017-01-23T00:00:00+02:00</published><updated>2017-02-07T00:00:00+02:00</updated><author><name>Artur K.</name></author><id>tag:kutsevol.github.io,2017-01-23:/2017/01/23/virtualenv</id><summary type="html">&lt;div class="figure align-left"&gt;
&lt;img alt="Python Virtualenv" src="/images/python-virtualenv.jpg" style="width: 262.5px; height: 140.0px;" /&gt;
&lt;/div&gt;
&lt;p&gt;Официальная документация по &lt;a class="reference external" href="https://virtualenv.pypa.io/en/stable/"&gt;Virtualenv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtualenv&lt;/strong&gt; - инструмент для создания изолированного окружения Python. Это
окружение можно использовать для проверки новых версий ваших программ, новых
версий пакетов, которые используются или просто в качестве песочницы для новых
пакетов. Кроме того, virtualenv можно использовать в качестве рабочего места в
случаях, если нет возможности копировать файлы …&lt;/p&gt;</summary><content type="html">&lt;div class="figure align-left"&gt;
&lt;img alt="Python Virtualenv" src="/images/python-virtualenv.jpg" style="width: 262.5px; height: 140.0px;" /&gt;
&lt;/div&gt;
&lt;p&gt;Официальная документация по &lt;a class="reference external" href="https://virtualenv.pypa.io/en/stable/"&gt;Virtualenv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtualenv&lt;/strong&gt; - инструмент для создания изолированного окружения Python. Это
окружение можно использовать для проверки новых версий ваших программ, новых
версий пакетов, которые используются или просто в качестве песочницы для новых
пакетов. Кроме того, virtualenv можно использовать в качестве рабочего места в
случаях, если нет возможности копировать файлы в site-packages по какой-либо
причине.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtualenv&lt;/strong&gt; решает ряд проблем:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Создание новой изолированной среды для проекта Python;&lt;/li&gt;
&lt;li&gt;Возможность загрузки пакетов без привилегий  admin/sudo;&lt;/li&gt;
&lt;li&gt;Простая и быстрая упаковка приложения;&lt;/li&gt;
&lt;li&gt;Создание списка зависимостей одного проекта (с помощью pip);&lt;/li&gt;
&lt;li&gt;Быстрое восстановление зависимостей с помощью файла требований (с помощью pip);&lt;/li&gt;
&lt;li&gt;Портативность между системами.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Установка&lt;/h2&gt;
&lt;p&gt;Установка virtualenv:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo pip3 install virtualenv
&lt;/pre&gt;
&lt;p&gt;Для большего комфорта работы с virtualenv создано расширение, которое делает все
манипуляции с окруженем еще проще. Установка virtualenvwrapper:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
sudo pip3 install virtualenvwrapper
&lt;/pre&gt;
&lt;p&gt;В ~/.bashrc дописываем:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;
&lt;p&gt;Создаем новое окружение:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
mkvirtualenv env-name
&lt;/pre&gt;
&lt;p&gt;Просмотреть список окружений:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
workon
&lt;/pre&gt;
&lt;p&gt;Поменять окружение:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
workon env-name
&lt;/pre&gt;
&lt;p&gt;Выход из окружения:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
deactivate
&lt;/pre&gt;
&lt;p&gt;Удалить окружение:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
rmvirtualenv env-name
&lt;/pre&gt;
&lt;p&gt;Находясь в одном из окружений, можно ставить пакеты через pip, как обычно.
Для примера выбран пакет - &lt;em&gt;flask&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
pip3 install flask
&lt;/pre&gt;
&lt;p&gt;Requirements.txt - файл с описанием зависимостей, позволяет установить все
необходимые зависимости за один раз вот таким образом:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
pip3 install -r requirements.txt
&lt;/pre&gt;
&lt;p&gt;Создать такой файл можно следующим образом:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
pip3 freeze &amp;gt; requirements.txt
&lt;/pre&gt;
&lt;p&gt;Список источников:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://eax.me/python-virtualenv/"&gt;Памятка по virtualenv и изолированным проектам на Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://proft.me/2010/04/3/python-i-okruzhenie-virtualenv/"&gt;Python и окружение virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="virtualenv"></category><category term="python"></category></entry></feed>