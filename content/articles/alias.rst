:title: Alias
:date: 2017-02-09
:modified: 2017-02-09
:author: Artur K.
:category: Administration
:tags: linux
:slug: alias

.. contents:: **Содержание**
   :depth: 3

----

============
**Введение**
============

Команда **alias** - это очень удобный инструмент для тех, кто часто работает в командной строке.
При правильных установках она поможет вам быстрее вводить команды, а также
исправлять опечатки. **alias** - это встроенная команда оболочки, поэтому инсталлировать ее не требуется.

**alias** используется для создания альтернативных версий обычных команд, присваивая
им новые названия, а также чтобы избежать необходимости запоминать длинные и
сложные команды. Кроме того, вы можете задать опции по умолчанию, которые
используются каждый раз при запуске команды alias.

=====================
**Как создать alias**
=====================

Каждый день, как правило, используются одни и те же команды такие как *sudo aptitude update*,
*sudo aptitude upgrade*, *sudo aptitude install* и т.д. С помощью *alias* их можно заменить, например,
на - *update*, *upgrade* и *install* соответственно. Как это сделать?

Общая конструкция создания **alias** следующая:

.. code::

    alias short_name="command"

Где *short_name* - название (псевдоним) которое будет использоваться после создания
**alias**, a *command* - команда, которую необходимо выполнить, например:

.. code::

    alias install="sudo aptitude install"

Если выполнить эту команду в коммандной строке, использовать данный **alias**
можно будет сразу, но! "время жизни" **alias** ограничивается временем жизни
сессии в которой был выполнен этот **alias**.

====================
**Постоянные alias**
====================

Для того чтобы создаваемые **alias** были доступны всегда необходимо их
включить в свой локальный файл *~/.bashrc*. Здесь мы предпологаем, что в качестве
коммандной оболочки используется *bash*.

Есть несколько способов, как включить **alias** в *.bashrc*. Каждый способ
подразумевает сделать 2 шага: добавить **alias** в файл *.bashrc* и
`перезагрузить файл *.bashrc*`.

1. С помощью команды echo:

.. code::

    echo 'alias install="sudo aptitude install"' >> ~/.bashrc

    . ~/.bashrc

. ~/.bashrc - `перезагрузка` файла без выхода из системы, используется, чтобы
внесенные изменения можно было использовать в текущей сессии.

2. Добавление **alias** в ручную в *~/.bashrc*:

.. code::

    sudo nano ~/.bashrc

В конце файла или в любом другом месте, добавить alias:

.. code::

    alias install="sudo aptitude install"

Сохранить изменения и выйти из файла. Перезагрузить файл:

.. code::

    . ~/.bashrc

3. Добавление **alias** в отдельный файл. Со временем к-во **alias** может
быстро разростаться и искать их в файле *~/.bashrc* станет довольно трудно,
поэтому все **alias** можно вынести в отдельный файл, например, *~/.bash_aliases*
(по умолчанию не существует).

Создаем файл:

..code::

    touch ~/.bash_aliases

Открываем на редактирование:

.. code::

    sudo nano ~/.bash_aliases


Добавить все **alias** в файл *~/.bash_aliases*, сохранить и выйти из файла.

В файле ~/.bashrc дописываем (раскомментируем) следующий код, чтобы все **alias**
были доступны системе:

.. code::

    if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
    fi

`Перезагружаем` файл:

.. code::

    . ~/.bashrc

=========================
**Просмотр списка alias**
=========================

Чтобы посмотреть список всех доступных **alias**, просто выполните команду
*alias* без аргументов (в некоторых системах используется опция -p)

.. code::

    $ alias
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias grep='grep --color=auto'

===================
**Удаление alias**
===================

Если **alias** больше не нужен, можно удалить его из системы, используя команды
*unalias*. В качестве аргумента вставьте имя алиаса, который хотите удалить.

.. code::

    $ alias | grep ls
    alias ls='ls -l'
    $ unalias ls
    $ alias | grep ls
    $

Если вы определили свой **alias** в файле *~/.bashrc*, также необходимо удалить
определение **alias**, иначе он снова будет определен после старта сеанса
командной оболочки или перезагрузки компьютера.
