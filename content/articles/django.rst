:title: Django
:date: 2017-05-12
:modified: 2017-05-12
:author: Artur K.
:category: Development
:tags: python, django
:slug: django
:status: draft

StepFlow:

django-admin startproject <project_name> [destination]
python manage.py migrate
python manage.py <app_label> [destiantion]
python manage.py createsuperuser




django-admin – это консольный инструмент Django.

https://djbook.ru/rel1.9/ref/django-admin.html#django-admin-startproject

django-admin startproject - Создает структуру каталога проета Django с указанным
названием в текущем каталоге, или в котором вы укажите.

По умолчанию новый каталог содержит manage.py и пакет проекта (содержащий
settings.py и другие файлы).

Если указано только название проекта, и каталог и Python пакет проекта будет
называться <projectname>, и будут созданы в текущем каталоге.

Если указать необязательный путь к каталогу, Django будет использовать его как
каталог проекта, создаст в нём manage.py и пакет проекта. Можно использовать ‘.’,
чтобы указать текущий каталог.

----

python manage.py runserver

Запускает простой локальный Web-сервер для разработки. По умолчанию сервер
запускается на 8000 порте и 127.0.0.1 IP адресе. Вы можете явно указать
IP адрес и порт.

----

python manage.py migrate

Синхронизирует состояние базы данных с текущим состоянием моделей и миграций.
Подробнее о миграциях вы можете прочитать в соответствующем разделе.

Поведение команды зависит от указанных аргументов:

Без аргументов: будет выполнена синхронизация всех приложений.

<app_label>: Будут выполнены миграции для указанного приложения до самой последней
миграции. Это может вызвать миграцию других приложений через зависимости в миграциях.

<app_label> <migrationname>: Приводит базу данных к состоянию, которые было бы
после завершения указанной миграции, но последующие миграции не выполнены.
Обратите внимание, это может привести к отмене миграций, если были выполнены
миграции, которые следуют после указанной вами. Используйте zero, чтобы отменить
все миграции для приложения.

----

python manage.py blog

Создает структуру каталога приложения Django с указанным названием в текущем
каталоге, или в котором вы укажите.

По умолчанию созданный каталог содержит файл models.py и другие файлы
шаблона приложения. (Смотрите исходный код). Если вы указали только название
приложения, оно будет создано в текущем каталоге.

Если вы указали путь к каталогу, Django будет использовать его, вместо создания
нового. Вы можете использовать ‘.’, чтобы указать текущий каталог.

----

python manage.py createsuperuser

Эта команда работает только, если установлена система авторизации (django.contrib.auth).
Создает суперпользователя (пользователь со всеми правами). Можно использовать
для создания самого первого суперпользователя, или чтобы программно создавать
суперпользователей.
При запуске через консоль команда потребует ввести пароль. Если выполнить
команду программно, не через консоль, будет создан пользователь без пароля,
он не сможет авторизоваться, пока не будет установлен пароль для него.
